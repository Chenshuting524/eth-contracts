{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "CurEpochId",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "CurEpochStartHeight",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "CurValidatorPkBytes",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "EthToPolyTxHashIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "EthToPolyTxHashMap",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "ExtraData",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint64",
						"name": "fromChainId",
						"type": "uint64"
					},
					{
						"internalType": "bytes32",
						"name": "fromChainTx",
						"type": "bytes32"
					}
				],
				"name": "checkIfFromChainTxExist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getCurEpochId",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getCurEpochStartHeight",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getCurEpochValidatorPkBytes",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "ethTxHashIndex",
						"type": "uint256"
					}
				],
				"name": "getEthTxHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getEthTxHashIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "key1",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "key2",
						"type": "bytes32"
					}
				],
				"name": "getExtraData",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint64",
						"name": "fromChainId",
						"type": "uint64"
					},
					{
						"internalType": "bytes32",
						"name": "fromChainTx",
						"type": "bytes32"
					}
				],
				"name": "markFromChainTxExist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "pause",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint64",
						"name": "epochId",
						"type": "uint64"
					}
				],
				"name": "putCurEpochId",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint64",
						"name": "startHeight",
						"type": "uint64"
					}
				],
				"name": "putCurEpochStartHeight",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bytes",
						"name": "curEpochPkBytes",
						"type": "bytes"
					}
				],
				"name": "putCurEpochValidatorPkBytes",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "ethTxHash",
						"type": "bytes32"
					}
				],
				"name": "putEthTxHash",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "key1",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "key2",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "value",
						"type": "bytes"
					}
				],
				"name": "putExtraData",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "unpause",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"eth-contracts/contracts/core/cross_chain_manager/data/EthCrossChainData.sol": "EthCrossChainData"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"eth-contracts/contracts/core/cross_chain_manager/data/EthCrossChainData.sol": {
			"keccak256": "0x36c92e9cff634b2e1b736a58f76c74b61fba06d341b435b732f6e37d3f886256",
			"urls": [
				"bzz-raw://71b1ff867c3dc60c603b9c4423eb6eba7100806fffae9f08eb5da1da33db7531",
				"dweb:/ipfs/QmVAzFHR1HmmcFPUFt9752oJro8FKaCDGiqQDNnan5WJT1"
			]
		},
		"eth-contracts/contracts/core/cross_chain_manager/interface/IEthCrossChainData.sol": {
			"keccak256": "0x6e7c6fe1d06f700147c50f4ee4a5f952f84143f19f2190b7ec2f5dd02e46d3b6",
			"urls": [
				"bzz-raw://f9e19d9bf72f3c42642283cefd354092388ca34bc6dce087fc41e448bf0c90bf",
				"dweb:/ipfs/QmXC8kYqsyvfXPEdcF656Zgfvcfsj5QA5YPhmRqQGa3J72"
			]
		},
		"eth-contracts/contracts/libs/GSN/Context.sol": {
			"keccak256": "0x036b5dafc5b62f57a4eb3fcada1e58dc04cb4abf3c874e40227fb3589d208b16",
			"urls": [
				"bzz-raw://8064d0894f167d294d366ecb64b3e473a112df9da8d2dfb4b6629d47654c8ffc",
				"dweb:/ipfs/QmaMu56NkkrRnQDpj7GKRTYCfkSGBe2Nmp4GmagWiSbVMB"
			]
		},
		"eth-contracts/contracts/libs/lifecycle/Pausable.sol": {
			"keccak256": "0xd2f2e4bcc0b25a5549dcc6c605f3661fd5e0418c8d9719e4ace80e98cc4466a6",
			"urls": [
				"bzz-raw://60c275f84cc0aac74ef9047c3baa4ffdc524ce99ab8cf18ab9234bdbc56f8145",
				"dweb:/ipfs/QmcYDYxSMMwbMKfNH9GQqW4EowFBmezCaAEDZK55M7j7ws"
			]
		},
		"eth-contracts/contracts/libs/ownership/Ownable.sol": {
			"keccak256": "0x22e7582f3f02e2d6d44eedf5a047e7f9d913f3d62aed6d524b8213684cfd87e5",
			"urls": [
				"bzz-raw://9eb4da21c4de925bb310e39b8a2e1e14659abe08d9fcbc2b3fe8932298c6acfd",
				"dweb:/ipfs/QmQFTnQ52XZDrZ8LSqyC4paTTQgNNWD79uc3T4LjeBB53d"
			]
		}
	},
	"version": 1
}